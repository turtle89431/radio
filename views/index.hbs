<h1>{{title}}</h1>
<p>Welcome to {{title}}</p>
<h2></h2>
<div>
    <div>
        <input id="un" type="text" placeholder="User">
        <input type="text" placeholder="Data" id="da">
        <input type="button" value="Login" onclick="login()">
       <input type="button" value="Logout" onclick="logout()">
    </div>
    <ul id="users">
        <li>
            <button id="callb">eXAMPLE</button>
        </li>
    </ul>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    var port = '//:' + {{ port }}
    console.log(port)
    var socket = io(port);
    socket.on('getUsers', async function (data) {
        let ut = document.querySelector("ul#users")
        ut.innerHTML = "";
        
        let a = await ut.childNodes;
        let Tdata = Array.from(a)
        Tdata = Tdata.map(e=>e.id)
        console.log(Tdata)
        for (let i = 0; i < data.length; i++) {

            let tuser = Object.keys(data[i])[0]
            let tdata = Object.values(data[i])[0]
            console.log(tuser, tdata)
            let li = document.createElement("li")
            li.id = tuser
            let btn = document.createElement("input")
            btn.type = "button"
            btn.value = tuser
            btn.addEventListener("click", () => { call(tdata) })

            li.appendChild(btn)
            ut.appendChild(li)
        }
    })
    var call = key => console.log(key)
    var login = () => {
        let user = document.querySelector("#un").value
        let data = document.querySelector("#da").value
        socket.emit('login', { user: user, data: data })
    }
</script>